"""empty message

Revision ID: 559b6f033ed4
Revises: 
Create Date: 2022-06-12 20:34:07.098104

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '559b6f033ed4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cart')
    op.drop_table('reviews')
    op.drop_table('product_cart')
    op.drop_table('products')
    op.add_column('users', sa.Column('hashed_password', sa.String(length=255), nullable=False))
    op.create_unique_constraint(None, 'users', ['username'])
    op.drop_column('users', 'fullname')
    op.drop_column('users', 'createdat')
    op.drop_column('users', 'hashedpassword')
    op.drop_column('users', 'updatedat')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('updatedat', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('hashedpassword', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('createdat', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('fullname', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'hashed_password')
    op.create_table('products',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('products_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=4, scale=2), autoincrement=False, nullable=False),
    sa.Column('createdat', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updatedat', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='products_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('product_cart',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cart_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('createdat', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updatedat', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cart_id'], ['cart.id'], name='product_cart_cart_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='product_cart_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='product_cart_pkey')
    )
    op.create_table('reviews',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('reviewer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('createdat', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updatedat', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='reviews_product_id_fkey'),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], name='reviews_reviewer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='reviews_pkey')
    )
    op.create_table('cart',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('createdat', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updatedat', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='cart_product_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='cart_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='cart_pkey')
    )
    # ### end Alembic commands ###
